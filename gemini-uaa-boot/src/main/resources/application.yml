spring:
  application:
    name: gemini-uaa
  profiles:
    active: dev
    include: cloud
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://docker-server:3306/gemini_uaa?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: root
    password: root
  data:
    redis:
      host: docker-server
      port: 6379
      database: 7
      timeout: 10000
  cache:
    type: redis
    redis:
      cache-null-values: true
      key-prefix: "gemini-uaa:cache:"
      time-to-live: 1000
  security:
    oauth2:
      authorizationserver:
        issuer: https://www.glseven.com
        client:
          demo-client:
            registration:
              client-id: demo-client
              client-secret: "{noop}demo-secret"
              client-name: demo-client
              client-authentication-methods:
                - client_secret_basic
                - client_secret_post
                - private_key_jwt
              authorization-grant-types:
                - authorization_code
                - implicit
                - refresh_token
                - client_credentials
                - password
              redirect-uris:
                - https://www.glseven.com
                - https://www.glseven.com/**
              scopes:
                - openid
                - profile
                - email
                - phone
                - address
                - offline_access
                - demo-scope

gemini:
  open-api:
    enabled: true
    info:
      version: "0.0.1-SNAPSHOT"
      title: "Gemini UAA Boot"
      description: "认证授权服务"
      contact:
        name: "Gemini UAA"
        email: "gemini@glseven.com"
        url: "https://www.glseven.com"
    security:
      - basicAuth: [ ]
      - jwt: [ ]
    components:
      security-schemes:
        basicAuth:
          type: http
          scheme: basic
        jwt:
          type: http
          scheme: bearer
          bearerFormat: JWT
  security:
    ignore:
      ignore-patterns:
        - /auth/**
logging:
  level:
    org.springframework.security: DEBUG
server:
  port: 8082